# Generated by Django 2.2.2 on 2019-06-23 07:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djrichtextfield.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users_mgt', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='社團名字(中文)')),
                ('name_eng', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='社團名字(英文)')),
                ('office', models.CharField(blank=True, max_length=15, null=True, verbose_name='社辦')),
                ('activity_place', models.CharField(blank=True, max_length=50, null=True, verbose_name='活動地點')),
                ('fee', models.IntegerField(blank=True, null=True, verbose_name='社費')),
                ('activity_time', models.TextField(blank=True, null=True, verbose_name='活動時間')),
                ('web', models.CharField(blank=True, max_length=100, null=True, verbose_name='粉專連結')),
                ('contact', models.TextField(blank=True, null=True, verbose_name='聯絡資訊')),
                ('info', djrichtextfield.models.RichTextField(blank=True, null=True, verbose_name='社團簡介')),
                ('log_add_time', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('is_activate', models.BooleanField(default=True, verbose_name='社團運作中')),
                ('leader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users_mgt.Student', verbose_name='社長')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='社團中心負責人')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users_mgt.Teacher', verbose_name='指導老師')),
            ],
            options={
                'ordering': ['-timestamp'],
                'permissions': (('can_view', 'Can view Club'), ('can_add', 'Can add Club'), ('can_edit', 'Can edit Club'), ('can_close', 'Can close Club'), ('can_delete', 'Can delete Club')),
            },
        ),
        migrations.CreateModel(
            name='Club_apply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_out', models.BooleanField(choices=[(True, '入社'), (False, '退社')], default=True, verbose_name='申請入社or退社')),
                ('reason', djrichtextfield.models.RichTextField()),
                ('text1', models.TextField(blank=True, null=True)),
                ('text2', models.TextField(blank=True, null=True)),
                ('bool1', models.BooleanField()),
                ('bool2', models.BooleanField()),
                ('log_add_time', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('is_permitted', models.BooleanField(choices=[(True, '是'), (False, '否')], default=False, verbose_name='是否通過申請?')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club_mgt.Club')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users_mgt.Student')),
            ],
            options={
                'ordering': ['-timestamp'],
                'permissions': (('can_view', 'Can view Club_apply'), ('can_add', 'Can add Club_apply'), ('can_edit', 'Can edit Club_apply'), ('can_delete', 'Can delete Club_apply')),
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_manage_stu', models.BooleanField(default=False, verbose_name='是否為幹部(學生)')),
                ('is_manage', models.BooleanField(default=False, verbose_name='是否為指導老師')),
                ('position', models.CharField(blank=True, max_length=10, null=True, verbose_name='幹部職稱')),
                ('club_enterday', models.DateField(verbose_name='入社日期')),
                ('log_add_time', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='club_mgt.Club', verbose_name='所屬社團')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='成員名稱')),
            ],
            options={
                'ordering': ['-timestamp'],
                'permissions': (('can_view', 'Can view Member'), ('can_add', 'Can add Member'), ('can_edit', 'Can edit Member'), ('can_delete', 'Can delete Member')),
            },
        ),
        migrations.CreateModel(
            name='Member_quit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quitday', models.DateField(blank=True, null=True, verbose_name='退社日期')),
                ('log_add_time', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='club_mgt.Member', verbose_name='學生')),
            ],
            options={
                'ordering': ['-timestamp'],
                'permissions': (('can_view', 'Can view Member_quit'), ('can_add', 'Can add Member_quit'), ('can_edit', 'Can edit Member_quit'), ('can_delete', 'Can delete Member_quit')),
            },
        ),
        migrations.CreateModel(
            name='Club_apply_permit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.BooleanField(choices=[(True, '通過'), (False, '不通過')])),
                ('log_add_time', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('apply_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='club_mgt.Club_apply')),
                ('permitter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['timestamp'],
                'permissions': (('can_view', 'Can view Club_apply_permit'), ('can_add', 'Can add Club_apply_permit'), ('can_edit', 'Can edit Club_apply_permit'), ('can_delete', 'Can delete Club_apply_permit')),
            },
        ),
    ]
